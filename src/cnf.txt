ALGORITHM -> ALGORITHM ALGORITHM | H L01 | H M01 | H N01 | H O01 | K C01 | K D01 | K E01 | P P01 | P Q01 | S O01 | I VAR | I J01 | J I01 | VAR A1 | VAR B1 | VAR C1 | VAR D1 | VAR E01 | E T01 | E U01 | F Q01 | F R01 | TYPE S01
VAR -> variable
Z -> =
DECLARE -> VAR A1 | VAR B1 | VAR C1 | VAR D1 | VAR E01
A1 -> Z VARIABLE4
Y -> [
X -> ]
B1 -> Z B2
B2 -> Y X
C1 -> Z C2
C2 -> Y C3
C3 -> INLINE_FOR X
D1 -> Z D2
D2 -> Y D3
D3 -> VARIABLE5 X
E01 -> OTHER_OPERATOR VARIABLE3 | VAR E02
VARIABLE2 -> VARIABLE1 F01 | number | true | false | BOOLEAN K01 | BOOLEAN L01 | NOT BOOLEAN | VARIABLE1 M01 | VARIABLE1 N01 | 'string' | "string" | STRING J01
F01 -> OPERATOR VARIABLE1 | VARIABLE3 Q
VARIABLE3 -> number | variable
VARIABLE4 -> VARIABLE3 G01 | number | variable
G01 -> OPERATOR VARIABLE3 | K G02
W -> ,
VARIABLE5 -> VAR H01 | variable
H01 -> W VAR | K H02
OPERATOR -> + | - | * | / |  I01 | % | OPERATOR OPERATOR
I01 -> OPERATOR OPERATOR | VAR IMPORT
OTHER_OPERATOR -> OPERATOR Z | OPERATOR Z | OPERATOR Z | OPERATOR Z
RELATION -> > | RELATION Z | < | RELATION Z | U Z | Z Z
U -> !
STRING -> 'string' | "string" | STRING J01
J01 -> OPERATOR STRING | VAR J02
COMMENT -> '''ALGORITHM''' | """ALGORITHM""" | #VARIABLE2
TYPE -> str | int | float | char
BOOLEAN -> true | false | BOOLEAN K01 | BOOLEAN L01 | NOT BOOLEAN | VARIABLE1 M01 | VARIABLE1 N01
K01 -> AND BOOLEAN | VARIABLE3 K02
L01 -> OR BOOLEAN | R L02
M01 -> IS VARIABLE1 | R M02
N01 -> RELATION VARIABLE1 | BOOLEAN N02
NONE -> none
AND -> and
OR -> or
NOT -> not
AS -> as
BREAK -> break
CONTINUE -> continue
T -> :
S -> class
CLASS -> S O01
O01 -> VAR O02 | VAR O02
O02 -> T ALGORITHM | RELATION O03
R -> (
Q -> )
P -> def
DEF -> P P01 | P Q01
P01 -> VAR P02 | FUNCTION_CALL P02
P02 -> R P03 | AS P03
P03 -> VARIABLE3 P04 | VAR P04
P04 -> Q P05 | T ALGORITHM
P05 -> T ALGORITHM
Q01 -> VAR Q02 | R Q
Q02 -> R Q03
Q03 -> VARIABLE3 Q04
Q04 -> Q Q05
Q05 -> T Q06
Q06 -> ALGORITHM RETURN
FUNCTION_CALL -> VAR R01 | VAR S01
R01 -> R R02 | R R02
R02 -> VARIABLE3 Q | STRING Q
S01 -> R Q | R S02
O -> if
IF -> O T01 | O U01 | IF ELIF | IF ELSE | IF BREAK | IF CONTINUE | IF RAISE | IF PASS
T01 -> R T02 | R Q
T02 -> BOOLEAN T03
T03 -> Q T04
T04 -> T ALGORITHM
U01 -> R U02 | R U02
U02 -> VAR U03 | VARIABLE2 Q
U03 -> RELATION U04
U04 -> VARIABLE4 U05
U05 -> Q U06
U06 -> T ALGORITHM
N -> elif
ELIF -> N V01 | N W01 | ELIF ELIF | ELIF ELSE
V01 -> R V02
V02 -> BOOLEAN V03
V03 -> Q V04
V04 -> T ALGORITHM
W01 -> R W02
W02 -> VAR W03
W03 -> RELATION W04
W04 -> VARIABLE4 W05
W05 -> Q W06
W06 -> T ALGORITHM
M -> else
ELSE -> M X01
X01 -> T ALGORITHM
L -> raise
RAISE -> L FUNCTION_CALL
RANGE -> R Y01 | R Z01 | R A11 | R B01
Y01 -> VARIABLE3 Q
Z01 -> VARIABLE3 Z02
Z02 -> W Z03
Z03 -> VARIABLE3 Z04
Z04 -> W number)
A11 -> VARIABLE3 A12
A12 -> W A13
A13 -> VARIABLE3 Q
B01 -> STRING Q
K -> for
FOR -> K C01 | K D01 | K E01
C01 -> VAR C02
C02 -> IN C03
C03 -> RANGE C04
C04 -> T ALGORITHM
D01 -> VAR D02
D02 -> IN D03
D03 -> VAR D04
D04 -> T ALGORITHM
E02 -> IN E03
E03 -> STRING E04
E04 -> T ALGORITHM
INLINE_RANGE -> R F01
INLINE_FOR -> VAR G01 | VAR H01
G02 -> VAR G03
G03 -> IN INLINE_RANGE
H02 -> VAR H03
H03 -> IN STRING
J -> from
FROM -> J I01
I -> import
IMPORT -> I VAR | I J01
J02 -> AS VAR
IN -> in
IS -> is
PASS -> pass
RETURN -> RETURN BOOLEAN | RETURN VAR | RETURN K01 | RETURN STRING | return
K02 -> OPERATOR VARIABLE3
H -> while
WHILE -> H L01 | H M01 | H N01 | H O01
L02 -> BOOLEAN L03
L03 -> Q L04
L04 -> T ALGORITHM
M02 -> VAR M03
M03 -> RELATION M04
M04 -> VARIABLE3 M05
M05 -> Q M06
M06 -> T ALGORITHM
N02 -> T ALGORITHM
O03 -> VARIABLE3 O04
O04 -> T ALGORITHM
G -> with
WITH -> G P01
F -> input
INPUT -> F Q01 | F R01 | TYPE S01
S02 -> INPUT Q
E -> print
PRINT -> E T01 | E U01
S0 -> ALGORITHM ALGORITHM | H L01 | H M01 | H N01 | H O01 | K C01 | K D01 | K E01 | P P01 | P Q01 | S O01 | I VAR | I J01 | J I01 | VAR A1 | VAR B1 | VAR C1 | VAR D1 | VAR E01 | E T01 | E U01 | F Q01 | F R01 | TYPE S01
VARIABLE1 -> variable | VARIABLE1 F01 | number | true | false | BOOLEAN K01 | BOOLEAN L01 | NOT BOOLEAN | VARIABLE1 M01 | VARIABLE1 N01 | 'string' | "string" | STRING J01