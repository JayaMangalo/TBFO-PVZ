ALGORITHM -> ALGORITHM ALGORITHM | J F01 | J G01 | J H01 | J I01 | M Z01 | M A11 | M B01 | S M01 | S N01 | W L01 | K VAR | K D01 | L C01 | VAR A1 | VAR B1 | VAR C1 | G N01 | G O01 | H K01 | H L01 | TYPE M01
VAR -> variable
Z -> =
DECLARE -> VAR A1 | VAR B1 | VAR C1
A1 -> Z VARIABLE4
B1 -> Z []
C1 -> OTHER_OPERATOR VARIABLE3
VARIABLE2 -> VARIABLE1 D1 | number | true | false | BOOLEAN H01 | BOOLEAN I01 | NOT BOOLEAN | VARIABLE1 J01 | VARIABLE1 K01 | 'string' | "string" | STRING G01
D1 -> OPERATOR VARIABLE1
VARIABLE3 -> number | variable
VARIABLE4 -> VARIABLE3 E1 | number | variable
E1 -> OPERATOR VARIABLE3
OPERATOR -> + | - | * | / |  F1 | % | OPERATOR OPERATOR
F1 -> OPERATOR OPERATOR
OTHER_OPERATOR -> OPERATOR Z | OPERATOR Z | OPERATOR Z | OPERATOR Z
RELATION -> > | RELATION Z | < | RELATION Z | Y Z | Z Z
Y -> !
STRING -> 'string' | "string" | STRING G01
G01 -> OPERATOR STRING | U G02
COMMENT -> '''ALGORITHM''' | """ALGORITHM""" | #VARIABLE2
TYPE -> str | int | float | char
BOOLEAN -> true | false | BOOLEAN H01 | BOOLEAN I01 | NOT BOOLEAN | VARIABLE1 J01 | VARIABLE1 K01
H01 -> AND BOOLEAN | BOOLEAN H02
I01 -> OR BOOLEAN | VAR I02
J01 -> IS VARIABLE1 | FUNCTION_CALL J02
K01 -> RELATION VARIABLE1 | U T
NONE -> none
AND -> and
OR -> or
NOT -> not
AS -> as
BREAK -> break
CONTINUE -> continue
X -> :
W -> class
CLASS -> W L01
L01 -> VAR L02 | U L02
L02 -> X ALGORITHM | STRING T
U -> (
T -> )
S -> def
DEF -> S M01 | S N01
M01 -> VAR M02 | U M02
M02 -> U M03 | INPUT T
M03 -> VARIABLE3 M04
M04 -> T M05
M05 -> X ALGORITHM
N01 -> VAR N02 | U T
N02 -> U N03
N03 -> VARIABLE3 N04
N04 -> T N05
N05 -> X N06
N06 -> ALGORITHM RETURN
FUNCTION_CALL -> VAR O01 | VAR P01
O01 -> U O02 | U O02
O02 -> VARIABLE3 T | VARIABLE2 T
P01 -> U T
R -> if
IF -> R Q01 | R R01 | IF ELIF | IF ELSE | IF BREAK | IF CONTINUE | IF RAISE | IF PASS
Q01 -> U Q02
Q02 -> BOOLEAN Q03
Q03 -> T Q04
Q04 -> X ALGORITHM
R01 -> U R02
R02 -> VAR R03
R03 -> RELATION R04
R04 -> VARIABLE4 R05
R05 -> T R06
R06 -> X ALGORITHM
Q -> elif
ELIF -> Q S01 | Q T01 | ELIF ELIF | ELIF ELSE
S01 -> U S02
S02 -> BOOLEAN S03
S03 -> T S04
S04 -> X ALGORITHM
T01 -> U T02
T02 -> VAR T03
T03 -> RELATION T04
T04 -> VARIABLE4 T05
T05 -> T T06
T06 -> X ALGORITHM
P -> else
ELSE -> P U01
U01 -> X ALGORITHM
O -> raise
RAISE -> O FUNCTION_CALL
RANGE -> U V01 | U W01 | U X01 | U Y01
V01 -> VARIABLE3 T
N -> ,
W01 -> VARIABLE3 W02
W02 -> N W03
W03 -> VARIABLE3 W04
W04 -> N number)
X01 -> VARIABLE3 X02
X02 -> N X03
X03 -> VARIABLE3 T
Y01 -> STRING T
M -> for
FOR -> M Z01 | M A11 | M B01
Z01 -> VAR Z02
Z02 -> IN Z03
Z03 -> RANGE Z04
Z04 -> X ALGORITHM
A11 -> VAR A12
A12 -> IN A13
A13 -> VAR A14
A14 -> X ALGORITHM
B01 -> VAR B02
B02 -> IN B03
B03 -> STRING B04
B04 -> X ALGORITHM
L -> from
FROM -> L C01
C01 -> VAR IMPORT
K -> import
IMPORT -> K VAR | K D01
D01 -> VAR D02
D02 -> AS VAR
IN -> in
IS -> is
PASS -> pass
RETURN -> RETURN BOOLEAN | RETURN VAR | RETURN E01 | RETURN STRING | return
E01 -> VARIABLE3 E02
E02 -> OPERATOR VARIABLE3
J -> while
WHILE -> J F01 | J G01 | J H01 | J I01
F01 -> U F02
F02 -> BOOLEAN F03
F03 -> T F04
F04 -> X ALGORITHM
G02 -> VAR G03
G03 -> RELATION G04
G04 -> VARIABLE3 G05
G05 -> T G06
G06 -> X ALGORITHM
H02 -> X ALGORITHM
I02 -> RELATION I03
I03 -> VARIABLE3 I04
I04 -> X ALGORITHM
I -> with
WITH -> I J01
J02 -> AS J03
J03 -> VAR J04
J04 -> X ALGORITHM
H -> input
INPUT -> H K01 | H L01 | TYPE M01
G -> print
PRINT -> G N01 | G O01
S0 -> ALGORITHM ALGORITHM | J F01 | J G01 | J H01 | J I01 | M Z01 | M A11 | M B01 | S M01 | S N01 | W L01 | K VAR | K D01 | L C01 | VAR A1 | VAR B1 | VAR C1 | G N01 | G O01 | H K01 | H L01 | TYPE M01
VARIABLE1 -> variable | VARIABLE1 D1 | number | true | false | BOOLEAN H01 | BOOLEAN I01 | NOT BOOLEAN | VARIABLE1 J01 | VARIABLE1 K01 | 'string' | "string" | STRING G01