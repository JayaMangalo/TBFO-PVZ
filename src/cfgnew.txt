Terminals:
with import from for range class raise ( ) variable break None and or not as continue = while : number string  , - if elif else print input pass def return is in “ ‘  [ ] { } + * / % > < ! & ^ str int float char True False
Variables:
ALGORITHM ISIWHILE DECLARE FORSTATEMENT DEFSTATEMENT CLASSSTATEMENT IFSTATEMENT IMPORT FROM WITHSTATEMENT FUNCTIONCALL PRINTSTATEMENT INPUTSTATEMENT WHILE CONDITION TITIKDUA ALGOLOOP BOOLEAN DECLARE VAR SAMADENGAN ISIVARIABEL OTHER_OPERATOR ISIVARNUMBER BKS TKS BK TK TITIKDUA INLINEFOR VAR5 DICTIONARY STRINGS FLOAT NUMBER NEGATIVE TITIK STRIP AND OR NOT RELATION PRINTSTATEMENT PRINT STRING BPD TPD BPS TPS BKK TKK VAR3 OPERATOR VAR4 VAR6 RETURNSTATEMENT IFSTATEMENT CONTINUE RAISESTATEMENT PASS RAISE ERROR FOR IN RANGE RANGESTATEMENT KOMA INLINERANGE INLINEFOR FROMSTATEMENT FROM IMPORT IMPORTSTATEMENT WITHSTATEMENT COMMENT WITH BREAK CLASS NONE AS KOMA STRIP IF ELIF ELSE PRINT INPUT PASS DEF RETURN IS
Productions:
ALGORITHM -> ALGORITHM ALGORITHM | ISIWHILE | DECLARE | FORSTATEMENT | DEFSTATEMENT | CLASSSTATEMENT | IFSTATEMENT | IMPORT | FROM | WITHSTATEMENT | FUNCTIONCALL | PRINTSTATEMENT | INPUTSTATEMENT;
ISIWHILE -> WHILE CONDITION TITIKDUA ALGOLOOP | WHILE BK BOOLEAN TK TITIKDUA ALGOLOOP | WHILE BK TK TITIKDUA ALGOLOOP;
ALGOLOOP -> ALGOLOOP ALGOLOOP | BREAK | CONTINUE | DECLARE | IFSTATEMENT | ISIWHILE | FORSTATEMENT | PRINTSTATEMENT | INPUTSTATEMENT;
DECLARE -> VAR SAMADENGAN ISIVARIABEL | VAR OTHER_OPERATOR ISIVARNUMBER | VAR SAMADENGAN BKS TKS | VAR SAMADENGAN BKS INLINE_FOR TKS | VAR SAMADENGAN BKS VAR5 TKS | DICTIONARY;
ISIVARIABEL -> VAR | STRINGS | ISIVARNUMBER | BK ISIVARIABEL TK;
ISIVARNUMBER -> FLOAT | NUMBER | NEGATIVE;
FLOAT -> NUMBER TITIK NUMBER;
NEGATIVE -> STRIP NUMBER | STRIP FLOAT;
CONDITION -> BK CONDITION TK | BOOLEAN | CONDITION AND CONDITION | CONDITION OR CONDITION | NOT CONDITION | CONDITION RELATION CONDITION | ISIVARIABEL RELATION ISIVARIABEL;
PRINTSTATEMENT -> PRINT BK VAR TK | PRINT BK STRINGS TK;
INPUTSTATEMENT -> INPUT BK TK | INPUT BK STRINGS TK | TYPE BK INPUTSTATEMENT TK;
STRINGS -> BPD STRING TPD | BPS STRING TPS;
STRING -> string | string STRING;
DICTIONARY -> VAR SAMADENGAN BKK TKK | VAR SAMADENGAN BKK VAR3 TITIKDUA VAR3 TKK;
BOOLEAN -> True | False;
OPERATOR -> + | - | * | / |  / / | % | * *;
OTHER_OPERATOR -> * = | + = | - = | / = | % = | / / = | * * = | & = | ^ = | > > = | < < =;
RELATION -> > | > = | < | < = | ! = | = =;
VAR3 -> VAR | NUMBER | FLOAT | NEGATIVE;
VAR4 -> VAR3 | VAR3 OPERATOR VAR3;
VAR5 -> VAR | VAR KOMA VAR;
VAR6 -> VAR3 | STRINGS;
DEFSTATEMENT -> DEF VAR BK VAR3 TK TITIKDUA ALGORITHM | DEF VAR BK VAR3 TK TITIKDUA ALGORITHM RETURNSTATEMENT;
RETURNSTATEMENT -> RETURN BOOLEAN | RETURN VAR6 | RETURN VAR4 | RETURN;
CLASSSTATEMENT -> CLASS VAR TITIKDUA ALGORITHM;
IFSTATEMENT -> IF BK BOOLEAN TK TITIKDUA ALGORITHM | IF BK VAR RELATION VAR4 TK TITIKDUA ALGORITHM | IFSTATEMENT ELIFSTATEMENT | IFSTATEMENT ELSESTATEMENT | IFSTATEMENT BREAK | IFSTATEMENT CONTINUE | IFSTATEMENT RAISESTATMENT | IFSTATEMENT PASS;
ELIFSTATEMENT ->  ELIF BK BOOLEAN TK TITIKDUA ALGORITHM | ELIF BK VAR RELATION VAR4 TK TITIKDUA ALGORITHM | ELIFSTATEMENT ELIFSTATEMENT | ELIFSTATEMENT ELSESTATEMENT;
ELSESTATEMENT -> ELSE TITIKDUA ALGORITHM;
RAISESTATEMENT -> RAISE ERROR BK STRING TK;
ERROR -> ValueError | ZeroDivisionError | ImportError | NameError | TypeError;
FORSTATEMENT -> FOR VAR IN RANGE TITIKDUA ALGORITHM | FOR VAR IN VAR TITIKDUA ALGORITHM | FOR VAR IN STRING TITIKDUA ALGORITHM;
FUNCTIONCALL -> VAR BK VAR3 TK | VAR BK TK  | TYPE BK VAR3 TK | FUNCTIONCALL BK FUNCTIONCALL TK; 
RANGESTATEMENT -> RANGE BK CAR3 TK | RANGE BK NUMBER KOMA NUMBER KOMA NUMBER TK | RANGE BK NUMBER KOMA NUMBER TK; 
INLINERANGE -> BK VAR3 TK;
INLINEFOR -> VAR FOR VAR IN INLINERANGE | VAR FOR VAR IN STRING;
FROMSTATEMNET -> FROM VAR IMPORT;
IMPORTSTATEMENT -> IMPORT VAR | IMPORT VAR AS VAR;
WITHSTATEMENT -> WITH VAR BK VAR TK AS VAR TITIKDUA ALGORITHM;
COMMENT -> BPD BPD BPD STRING TPD TPD TPD | BPS BPS BPS STRING TPS TPS TPS;
WITH -> with;
IMPORT -> import;
FROM -> from;
FOR -> for;
RANGE -> range;
CLASS -> class;
RAISE -> raise;
BK -> (;
TK -> );
VAR -> variable;
BREAK -> break;
NONE -> None;
AND -> and;
OR -> or;
NOT -> not;
AS -> as;
CONTINUE -> continue;
SAMADENGAN -> =;
WHILE -> while;
TITIKDUA -> :;
NUMBER -> number;
KOMA -> ,;
STRIP -> -;
IF -> if;
ELIF -> elif;
ELSE -> else;
PRINT -> print;
INPUT -> input;
PASS -> pass;
DEF -> def;
RETURN -> return;
IS -> is;
IN -> in;
BPD -> “;
TPD -> “;
BPS -> ‘;
TPS -> ‘;
BKS -> [;
TKS -> ];
BKK -> {;
TKK -> }